Collection is a framework that provides an architecture to store and manipulate the
group of objects

Java Collections can achieve all the operations that you perform on a data such as
 searching, sorting, insertion, manipulation, and deletion.

Java Collection means a single unit of objects. Java Collection framework provides 
many interfaces (Set, List, Queue, Deque,Sortedset) and classes (ArrayList, Vector, LinkedList, 
PriorityQueue, HashSet, LinkedHashSet, TreeSet)


*********************List Interface*************************


List interface is the child interface of Collection interface. It inhibits a list type 
data structure in which we can store the ordered collection of objects. It can have
 duplicate values.

List interface is implemented by the classes ArrayList, LinkedList, Vector, and Stack.

To instantiate the List interface, we must use :

List <data-type> list1= new ArrayList();  
List <data-type> list2 = new LinkedList();  
List <data-type> list3 = new Vector();  
List <data-type> list4 = new Stack();  
There are various methods in List interface that can be used to insert, delete, and 
access the elements from the list.





**************************Queue Interface*********************************
Queue interface maintains the first-in-first-out order. It can be defined as an 
ordered list that is used to hold the elements which are about to be processed. 
There are various classes like PriorityQueue, Deque, and ArrayDeque which implements
 the Queue interface.

Queue interface can be instantiated as:

Queue<String> q1 = new PriorityQueue();  
Queue<String> q2 = new ArrayDeque();  



************************Deque Interface******************************
Deque interface extends the Queue interface. In Deque, we can remove and add the elements from both the side. Deque stands for a double-ended queue which enables us to perform the operations at both the ends.

Deque can be instantiated as:

Deque d = new ArrayDeque();  




*******************Set Interface*****************************

Set Interface in Java is present in java.util package. It extends the Collection interface.
 It represents the unordered set of elements which doesn't allow us to store the 
duplicate items. We can store at most one null value in Set. Set is implemented by 
HashSet, LinkedHashSet, and TreeSet.

Set can be instantiated as:

Set<data-type> s1 = new HashSet<data-type>();  
Set<data-type> s2 = new LinkedHashSet<data-type>();  
Set<data-type> s3 = new TreeSet<data-type>();  


*****************************SortedSet Interface************************

SortedSet is the alternate of Set interface that provides a total ordering on its elements. The elements of the SortedSet are arranged in the increasing (ascending) order. The SortedSet provides the additional methods that inhibit the natural ordering of the elements.

The SortedSet can be instantiated as:

SortedSet<data-type> set = new TreeSet(); 
